webpackJsonp([92741731139161],{3823:function(e,a){e.exports={data:{challengeNode:{title:"Access Multi-Dimensional Arrays With Indexes",description:["One way to think of a <dfn>multi-dimensional</dfn> array, is as an <em>array of arrays</em>. When you use brackets to access your array, the first set of brackets refers to the entries in the outer-most (the first level) array, and each additional pair of brackets refers to the next level of entries inside.","<strong>Example</strong>","<blockquote>var arr = [<br>&nbsp;&nbsp;[1,2,3],<br>&nbsp;&nbsp;[4,5,6],<br>&nbsp;&nbsp;[7,8,9],<br>&nbsp;&nbsp;[[10,11,12], 13, 14]<br>];<br>arr[3]; // equals [[10,11,12], 13, 14]<br>arr[3][0]; // equals [10,11,12]<br>arr[3][0][1]; // equals 11</blockquote>","<strong>Note</strong><br>There shouldn't be any spaces between the array name and the square brackets, like <code>array [0][0]</code> and even this <code>array [0] [0]</code> is not allowed. Although JavaScript is able to process this correctly, this may confuse other programmers reading your code.","<hr>","Using bracket notation select an element from <code>myArray</code> such that <code>myData</code> is equal to <code>8</code>."],challengeType:1,videoUrl:null,fields:{slug:"/javascript-algorithms-and-data-structures/basic-javascript/access-multi-dimensional-arrays-with-indexes",blockName:"Basic JavaScript",tests:[{text:"<code>myData</code> should be equal to <code>8</code>.",testString:"assert(myData === 8, '<code>myData</code> should be equal to <code>8</code>.');"},{text:"You should be using bracket notation to read the correct value from <code>myArray</code>.",testString:"assert(/myArray\\[2\\]\\[1\\]/g.test(code) && !/myData\\s*=\\s*(?:.*[-+*/%]|\\d)/g.test(code), 'You should be using bracket notation to read the correct value from <code>myArray</code>.');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"// Setup\nvar myArray = [[1,2,3], [4,5,6], [7,8,9], [[10,11,12], 13, 14]];\n\n// Only change code below this line.\nvar myData = myArray[0][0];\n",head:"",tail:'if(typeof myArray !== "undefined"){(function(){return "myData: " + myData + " myArray: " + JSON.stringify(myArray);})();}'},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-push",id:"56592a60ddddeae28f7aa8e1"},slug:"/javascript-algorithms-and-data-structures/basic-javascript/access-multi-dimensional-arrays-with-indexes"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-basic-javascript-access-multi-dimensional-arrays-with-indexes-a5c3555a6a397e46dfc0.js.map