webpackJsonp([0x8969e5352ade],{4237:function(e,o){e.exports={data:{challengeNode:{title:"Use display: flex to Position Two Boxes",description:["This section uses alternating challenge styles to show how to use CSS to position elements in a flexible way. First, a challenge will explain theory, then a practical challenge using a simple tweet component will apply the flexbox concept.","Placing the CSS property <code>display: flex;</code> on an element allows you to use other flex properties to build a responsive page.","<hr>","Add the CSS property <code>display</code> to <code>#box-container</code> and set its value to flex."],challengeType:0,videoUrl:"https://scrimba.com/p/pVaDAv/cgz3QS7",fields:{slug:"/responsive-web-design/css-flexbox/use-display-flex-to-position-two-boxes",blockName:"CSS Flexbox",tests:[{text:"<code>#box-container</code> should have the <code>display</code> property set to a value of flex.",testString:"assert($('#box-container').css('display') == 'flex', '<code>#box-container</code> should have the <code>display</code> property set to a value of flex.');"}]},required:[],files:{indexhtml:{key:"indexhtml",ext:"html",name:"index",contents:'<style>\n  #box-container {\n    height: 500px;\n    \n  }\n  \n  #box-1 {\n    background-color: dodgerblue;\n    width: 50%;\n    height: 50%;\n    \n  }\n\n  #box-2 {\n    background-color: orangered;\n    width: 50%;\n    height: 50%;\n    \n  }\n</style>\n<div id="box-container">\n  <div id="box-1"></div>\n  <div id="box-2"></div>\n</div>',head:"",tail:""},indexjs:null,indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/responsive-web-design/css-flexbox/add-flex-superpowers-to-the-tweet-embed",id:"587d78ab367417b2b2512af0"},slug:"/responsive-web-design/css-flexbox/use-display-flex-to-position-two-boxes"}}}});
//# sourceMappingURL=path---responsive-web-design-css-flexbox-use-display-flex-to-position-two-boxes-b36bb89f7d9c4d32bbea.js.map